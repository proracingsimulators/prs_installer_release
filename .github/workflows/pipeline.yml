name: Build and Release

on:
  push:
    branches:
      - develop
      - release
      - main

jobs:
  build:
    runs-on: windows-2022

    steps:

    # Step para checkout do repositório principal
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        token: ${{ secrets.PAT_TOKEN }}
        submodules: 'true'  # Certifica-se de que os submódulos sejam verificados

    - name: Set common env
      shell: pwsh
      run: |
        echo "PROJECT_NAME=hg_app" >> $env:GITHUB_ENV

    - name: Set alpha env
      if: ${{ github.ref == 'refs/heads/develop' }}
      shell: pwsh
      run: |
        echo "RELEASE_PRE=true" >> $env:GITHUB_ENV
        echo "RELEASE_KIND=pre-release" >> $env:GITHUB_ENV

    - name: Set beta env
      if: ${{ github.ref == 'refs/heads/release' }}
      shell: pwsh
      run: |
        echo "RELEASE_PRE=true" >> $env:GITHUB_ENV
        echo "RELEASE_KIND=pre-release" >> $env:GITHUB_ENV

    - name: Set release env
      if: ${{ github.ref == 'refs/heads/main' }}
      shell: pwsh
      run: |
        echo "RELEASE_PRE=false" >> $env:GITHUB_ENV
        echo "RELEASE_KIND=release" >> $env:GITHUB_ENV

    # Define variáveis de ambiente
    - name: Set common environment variables
      shell: pwsh
      run: |
        echo "ZIP_FILENAME=prs_app" >> $env:GITHUB_ENV

    # Fix submodule branches
    - name: Checkout submodules to correct branch
      shell: pwsh
      run: |
        $BRANCH_NAME = $Env:GITHUB_REF.Split('/')[-1]
        git submodule foreach "git checkout $BRANCH_NAME && git pull origin $BRANCH_NAME"

    # Build .NET solution
    - name: Build .NET solution
      shell: pwsh
      run: |
        nuget restore "prs_app/ProRacingSoftware.sln"
        & "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\MSBuild\Current\Bin\MSBuild.exe" "prs_app/ProRacingSoftware.sln" /p:Configuration=Release /p:Platform="Any CPU"
        dotnet publish prs_service\Prs.App.Service\Prs.App.Service.csproj -c Release -r win-x64 --self-contained true -o prs_app\ProRacingSoftware\bin\Release\service

    # Set version
    - name: Set Version
      shell: pwsh
      run: |
        $versionString = (Get-Item "prs_app\ProRacingSoftware\bin\Release\ProRacingSoftware.exe").VersionInfo.FileVersion
        echo "RELEASE_VERSION=$versionString" >> $env:GITHUB_ENV

    # Create zip file
    - name: Archive build
      uses: thedoctor0/zip-release@main
      with:
        type: 'zip'
        filename: ${{ env.ZIP_FILENAME }}.zip

    # Create release
    - name: Create release
      if: ${{ github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/release' || github.ref == 'refs/heads/main' }}
      uses: softprops/action-gh-release@v1
      with:
        prerelease: ${{ env.RELEASE_PRE }}
        body_path: prs_app\changes.md
        name: ${{ env.RELEASE_KIND }} ${{ env.RELEASE_VERSION }}
        tag_name: v${{ env.RELEASE_VERSION }}
        files: |
          ${{ env.ZIP_FILENAME }}.zip
